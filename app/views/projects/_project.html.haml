-is_current = current_page? project
-cache project.cache_key + (is_current ? '-c' : '') do
	%article[project]{:class => is_current ? nil : 'hentry'}
		-title = link_to_unless_current(project.title, project, :rel => 'bookmark')
		%header
			-if is_current
				%h1= title
			-else
				%h2.entry-title= title
			-if project.version.present?
				%span.version
					v#{project.version}
			.meta
				.date_duration
					-if project.start
						%abbr.dtstart{:title => project.start.strftime('%Y-%m-%d')}= project.start.strftime('%B %Y')
					-else
						unknown
					\-
					-if project.end
						%abbr.dtend{:title => project.end.strftime('%Y-%m-%d')}= project.end.strftime('%B %Y')
					-else
						present
					(#{project.status})
				.tags= render :partial => 'tags/tags', :object => project.tags
				.clearleft
		-if project.vcs.present?
			.vcslinks
				-if project.android_market_id.present? and not is_current
					#{link_to 'market', "market://details?id=#{project.android_market_id}"};
				-if /^git:\/\/(github.com\/.*?)\.git$/.match project.vcs
					#{link_to 'github', "http://#{$1}"}; #{link_to 'bugs', "http://#{$1}/issues"}; #{link_to 'changes', "http://#{$1}/commits"}
				-else
					=link_to 'VCS URL', project.vcs
		-if is_current
			-if project.android_market_id.present?
				.android_market
					=link_to image_tag('sprites/bugdroid.png')+'Go to Android Market', "market://details?id=#{project.android_market_id}"
					to install and be notified of future updates (link will only work on an Android device).
					.clearleft
			-files, sigs = project.downloads
			-if files.present?
				.downloads
					%p
						=project.android_market_id.present? ? raw('&hellip;or download manually:') : 'Downloads:'
					%ul
						-files.each do |f|
							%li
								-if %w(.gz .bz2 .tgz .tbz .c .cpp).include? f.extname  # (not .py .pl .rb .js)
									Source:
								=link_to f.basename, "/download/#{f.basename}"
								=number_to_human_size(f.size)
								-if sigs[f.to_s].present?
									(#{link_to raw('PGP&nbsp;signature'), "/download/#{sigs[f.to_s].basename}"})
					.clearleft
		.entry-content= render :partial => 'common/body', :format => 'html', :object => (is_current || project.summary.blank?) ? project.body : project.summary
