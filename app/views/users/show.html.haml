-you = params[:id] == 'current'
=titleh1(you ? "Your account" : "User #{@user.id}")

-form_for @user do |f|
	=f.error_messages :message => nil, :object_name => 'account'
	%dl
		%dt Identities
		-if @user.identities.empty?
			%dd none
		-elsif @user.identities.count == 1
			%dd= render :partial => @user.identities.first, :locals => {:plain=>true}
		-else
			%dd.fieldnote (choose default)
			-@user.identities.each do |i|
				%dd
					=f.radio_button(:default_identity_id, i.id)
					%label{:for => "user_default_identity_id_#{i.id}"}>= render :partial => i, :locals => {:plain=>true}
		%dd
			%button{:disabled=>true} Add
			%span.fieldnote (not yet implemented, admin can do this manually)
		-if has_role? :admin
			%dt Permissions
			%dd
				-Role.all.each do |r|
					%div
						-box_id = "user_role_ids_#{r.id}"
						=succeed label_tag(box_id,[r.description].flatten.join(', ')) do
							=check_box_tag 'user[role_ids][]', r.id, @user.roles.include?(r), :id => box_id
		-elsif not @user.roles.empty?
			%dt Permissions
			%dd
				%ul
					-@user.roles.collect(&:description).flatten.each do |d|
						%li= h d
		%dt Email
		%dd
			=f.text_field :email
			-if you and not permitted_to? :receive, :notifications
				.notice I won't ask you to confirm the address, but no mail will be sent until I approve your account.
			-[ |
				[:mail_on_edit, 'when a post I commented on is edited'], |
				[:mail_on_reply, 'when someone replies directly to one of my comments'], |
				[:mail_on_thread, 'when someone replies anywhere in the thread under one of my comments'], |
				[:mail_on_post, 'when there is a new post'], |
					].each do |k,v| |
				%div
					=succeed f.label k, v do
						=f.check_box k
	=f.submit 'Save'

#comments
	%h2 Comments
	-comments = @user.comments.visible_to(current_user)
	=render 'comment_count', :object => comments
	-if not comments.empty?
		=render comments, :context => 'user'
		#delete_all_comments= button_to 'Delete all comments', (url_for :action=>:destroy, :id => you ? 'current' : @user)+'/comments', :method => :delete, :confirm => "Really delete all your comments?"

.dangerous
	%h2 Delete account
	%ul
		%li This will delete this site's record of your account.
		-if not @user.comments.empty?
			%li This will not delete any comments, do that above if you want, before deleting your account.
		%li It won't delete anything on any other site.
		%li
			Logging in with an identity from a deleted account will&hellip;
			%ul
				%li &hellip;still work, creating a new account.
				%li &hellip;reclaim any comments previously created using the same identity.
	=button_to 'Delete account & sign out', {:action => :destroy, :id => you ? 'current' : @user}, :method => :delete, :confirm => 'Are you sure you want to delete your account?'
